{
  "name": "ansi-escapes",
  "version": "1.4.0",
  "description": "ANSI escape codes for manipulating the terminal",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/ansi-escapes.git"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "ansi",
    "terminal",
    "console",
    "cli",
    "string",
    "tty",
    "escape",
    "escapes",
    "formatting",
    "shell",
    "xterm",
    "log",
    "logging",
    "command-line",
    "text",
    "vt100",
    "sequence",
    "control",
    "code",
    "codes",
    "cursor",
    "iterm",
    "iterm2"
  ],
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "readme": "# ansi-escapes [![Build Status](https://travis-ci.org/sindresorhus/ansi-escapes.svg?branch=master)](https://travis-ci.org/sindresorhus/ansi-escapes)\n\n> [ANSI escape codes](http://www.termsys.demon.co.uk/vtansi.htm) for manipulating the terminal\n\n\n## Install\n\n```\n$ npm install --save ansi-escapes\n```\n\n\n## Usage\n\n```js\nconst ansiEscapes = require('ansi-escapes');\n\n// moves the cursor two rows up and to the left\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\n//=> '\\u001b[2A\\u001b[1000D'\n```\n\n\n## API\n\n### cursorTo([x, [y]])\n\nSet the absolute position of the cursor. `x0` `y0` is the top left of the screen.\n\nSpecify either both `x` & `y`, only `x`, or nothing.\n\n### cursorMove(x, [y])\n\nSet the position of the cursor relative to its current position.\n\n### cursorUp(count)\n\nMove cursor up a specific amount of rows. Default is `1`.\n\n### cursorDown(count)\n\nMove cursor down a specific amount of rows. Default is `1`.\n\n### cursorForward(count)\n\nMove cursor forward a specific amount of rows. Default is `1`.\n\n### cursorBackward(count)\n\nMove cursor backward a specific amount of rows. Default is `1`.\n\n### cursorLeft\n\nMove cursor to the left side.\n\n### cursorSavePosition\n\nSave cursor position.\n\n### cursorRestorePosition\n\nRestore saved cursor position.\n\n### cursorGetPosition\n\nGet cursor position.\n\n### cursorNextLine\n\nMove cursor to the next line.\n\n### cursorPrevLine\n\nMove cursor to the previous line.\n\n### cursorHide\n\nHide cursor.\n\n### cursorShow\n\nShow cursor.\n\n### eraseLines(count)\n\nErase from the current cursor position up the specified amount of rows.\n\n### eraseEndLine\n\nErase from the current cursor position to the end of the current line.\n\n### eraseStartLine\n\nErase from the current cursor position to the start of the current line.\n\n### eraseLine\n\nErase the entire current line.\n\n### eraseDown\n\nErase the screen from the current line down to the bottom of the screen.\n\n### eraseUp\n\nErase the screen from the current line up to the top of the screen.\n\n### eraseScreen\n\nErase the screen and move the cursor the top left position.\n\n### scrollUp\n\nScroll display up one line.\n\n### scrollDown\n\nScroll display down one line.\n\n### clearScreen\n\nClear the terminal screen.\n\n### beep\n\nOutput a beeping sound.\n\n### image(input, [options])\n\nDisplay an image.\n\n*Currently only supported on iTerm >=2.9.*\n\nSee [term-img](https://github.com/sindresorhus/term-img) for a higher-level module.\n\n#### input\n\nType: `buffer`\n\nBuffer of an image. Usually read in with `fs.readFile()`.\n\n#### options\n\n##### width\n##### height\n\nType: `string` `number`\n\nThe width and height are given as a number followed by a unit, or the word \"auto\".\n\n- `N`: N character cells.\n- `Npx`: N pixels.\n- `N%`: N percent of the session's width or height.\n- `auto`: The image's inherent size will be used to determine an appropriate dimension.\n\n##### preserveAspectRatio\n\nType: `boolean`<br>\nDefault: `true`\n\n### iTerm.setCwd([path])\n\nType: `string`<br>\nDefault: `process.cwd()`\n\n[Inform iTerm](https://www.iterm2.com/documentation-escape-codes.html) of the current directory to help semantic history and enable [Cmd-clicking relative paths](https://coderwall.com/p/b7e82q/quickly-open-files-in-iterm-with-cmd-click).\n\n\n## Related\n\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/ansi-escapes/issues"
  },
  "homepage": "https://github.com/sindresorhus/ansi-escapes#readme",
  "_id": "ansi-escapes@1.4.0",
  "_shasum": "d3a8a83b319aa67793662b13e761c7911422306e",
  "_resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
  "_from": "ansi-escapes@>=1.1.0 <2.0.0"
}
