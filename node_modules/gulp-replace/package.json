{
  "name": "gulp-replace",
  "version": "0.5.4",
  "description": "A string replace plugin for gulp",
  "dependencies": {
    "istextorbinary": "1.0.2",
    "readable-stream": "^2.0.1",
    "replacestream": "^4.0.0"
  },
  "devDependencies": {
    "concat-stream": "^1.5.0",
    "mocha": "^2.1.0",
    "should": "^7.0.1",
    "vinyl": "^0.5.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lazd/gulp-replace.git"
  },
  "keywords": [
    "gulpplugin",
    "replace"
  ],
  "author": {
    "name": "Larry Davis",
    "email": "lazdnet@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lazd/gulp-replace/issues"
  },
  "engines": {
    "node": ">=0.10"
  },
  "readme": "# gulp-replace [![NPM version][npm-image]][npm-url] [![Build status][travis-image]][travis-url]\n> A string replace plugin for gulp 3\n\n## Usage\n\nFirst, install `gulp-replace` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-replace\n```\n\nThen, add it to your `gulpfile.js`:\n\n### Regex Replace\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    .pipe(replace(/foo(.{3})/g, '$1foo'))\n    .pipe(gulp.dest('build/file.txt'));\n});\n```\n### String Replace\n```javascript\nvar replace = require('gulp-replace');\n\ngulp.task('templates', function(){\n  gulp.src(['file.txt'])\n    .pipe(replace('bar', 'foo'))\n    .pipe(gulp.dest('build/file.txt'));\n});\n```\n\n\n## API\n\ngulp-replace can be called with a string or regex.\n\n### replace(string, replacement[, options])\n\n#### string\nType: `String`\n\nThe string to search for.\n\n#### replacement\nType: `String` or `Function`\n\nThe replacement string or function. If `replacement` is a function, it will be called once for each match and will be passed the string that is to be replaced.\n\n### replace(regex, replacement[, options])\n\n#### regex\nType: `RegExp`\n\nThe regex pattern to search for. See the [MDN documentation for RegExp] for details.\n\n#### replacement\nType: `String` or `Function`\n\nThe replacement string or function. See the [MDN documentation for String.replace] for details.\n\n### gulp-replace options\n\nAn optional third argument, `options`, can be passed.\n\n#### options\nType: `Object`\n\n##### options.skipBinary\nType: `boolean`  \nDefault: `false`\n\nSkip binary files\n\n\n[MDN documentation for RegExp]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n[MDN documentation for String.replace]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n\n[travis-url]: http://travis-ci.org/lazd/gulp-replace\n[travis-image]: https://secure.travis-ci.org/lazd/gulp-replace.svg?branch=master\n[npm-url]: https://npmjs.org/package/gulp-replace\n[npm-image]: https://badge.fury.io/js/gulp-replace.svg\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/lazd/gulp-replace",
  "_id": "gulp-replace@0.5.4",
  "_shasum": "69a67914bbd13c562bff14f504a403796aa0daa9",
  "_resolved": "http://registry.npmjs.org/gulp-replace/-/gulp-replace-0.5.4.tgz",
  "_from": "gulp-replace@>=0.5.3 <0.6.0"
}
